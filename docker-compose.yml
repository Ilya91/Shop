version: '3.7'
services:
    gateway:
        build:
            context: gateway/docker
            dockerfile: development/nginx/Dockerfile
        ports:
            - "8080:8080"
            - "8081:8081"
            - "8083:8083"
        depends_on:
            - frontend
            - admin
            - api

    frontend:
        build:
            context: frontend/docker/development/nginx
        depends_on:
            - frontend-node

    admin:
        build:
            context: frontend/docker-admin/docker/development/nginx
        depends_on:
            - admin-node
    api:
        build:
            context: app/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./app:/app
        depends_on:
            - php-fpm
    php-fpm:
        build:
            context: app/docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            PHP_IDE_CONFIG: serverName=app
            DB_HOST: postgres
            DB_USER: app
            DB_PASSWORD: app
            DB_NAME: app
        volumes:
            - ./app:/app
        depends_on:
            - postgres
            - redis

    php-cli:
        build:
            context: app/docker
            dockerfile: development/php-cli/Dockerfile
        volumes:
            - ./app:/app
            - composer:/root/.composer/cache
        depends_on:
            - postgres
            - redis

        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            DB_HOST: postgres
            DB_USER: app
            DB_PASSWORD: app
            DB_NAME: app

    postgres:
        image: postgres:12.2-alpine
        volumes:
            - postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: app
            POSTGRES_DB: app
        ports:
            - "54321:5432"
    redis:
        image: redis:5.0-alpine
        volumes:
            - redis:/data
        command:
            - 'redis-server'
            - '--databases 2'
            - '--save 900 1'
            - '--save 300 10'
            - '--save 60 10000'
            - '--requirepass secret'
    node:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend/my-app:/app
        working_dir: /app

    frontend-node:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend/my-app:/app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
        tty: true

    node-admin:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend/admin:/app
        working_dir: /app

    admin-node:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend/admin:/app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
        tty: true

volumes:
    postgres:
    redis:
    composer:
